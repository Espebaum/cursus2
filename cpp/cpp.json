{
	"OCCF": {
		"prefix": "setHpp",
		"body": [
		  "#ifndef ${TM_FILENAME/^([^\\.]*)\\..*$/${1:/upcase}/}_${TM_FILENAME/^.*\\.([^\\.]*)$/${1:/upcase}/}",
		  "# define ${TM_FILENAME/^([^\\.]*)\\..*$/${1:/upcase}/}_${TM_FILENAME/^.*\\.([^\\.]*)$/${1:/upcase}/}\n",
		  "# include <iostream>",
		  "# include <string>",
		  "",
		  "#define RESET\t\t\"\\033[0m\"",					/* Reset Color */
		  "#define BOLDBLACK\t\"\\033[1m\\033[30m\"",		/* Bold Black */
		  "#define BOLDRED\t\t\"\\033[1m\\033[31m\"",		/* Bold Red */
		  "#define BOLDGREEN\t\"\\033[1m\\033[32m\"",		/* Bold Green */
		  "#define BOLDYELLOW\t\"\\033[1m\\033[33m\"",		/* Bold Yellow */
		  "#define BOLDBLUE\t\"\\033[1m\\033[34m\"",		/* Bold Blue */
		  "#define BOLDMAGENTA\t\"\\033[1m\\033[35m\"",		/* Bold Magenta */
		  "#define BOLDCYAN\t\"\\033[1m\\033[36m\"",		/* Bold Cyan */
		  "#define BOLDWHITE\t\"\\033[1m\\033[37m\"",		/* Bold White */
		  "",
		  "class ${TM_FILENAME_BASE}",
		  "{",
		  "\tprivate:",
		  "\t\t${1:/* data */}",
		  "\tpublic:",
		  "\t\t${TM_FILENAME_BASE}(${2:/* args */});",
		  "\t\t${TM_FILENAME_BASE}(const ${TM_FILENAME_BASE}& ref);",
		  "\t\t~${TM_FILENAME_BASE}();",
		  "\t\t${TM_FILENAME_BASE}& operator=(const ${TM_FILENAME_BASE}& ref);",
		  "};",
		  "\n#endif\n"
		],
		"description": "Write header file compling OCCF"
	  },
	  "OCCF_CPP": {
		"prefix": "setCpp",
		"body": [
			"#include \"${TM_FILENAME_BASE}.hpp\"",
			"",
			"${TM_FILENAME_BASE}::${TM_FILENAME_BASE}() {}",
			"",
			"${TM_FILENAME_BASE}::~${TM_FILENAME_BASE}() {}",
			"",
			"${TM_FILENAME_BASE}::${TM_FILENAME_BASE}(const ${TM_FILENAME_BASE} &ref)",
			"{",
			"\t*this = ref;",
			"}",
			"",
			"${TM_FILENAME_BASE}& ${TM_FILENAME_BASE}::operator=(const ${TM_FILENAME_BASE} &ref)",
			"{",
			"\tif (this != &ref)",
			"\t{",
			"\t\tthis->type = ref.type; //YOU CAN CHANGE THIS IF YOU NEED!!!",
			"\t}",
			"}"

		],
		"description": "Actual Cpp files compling OCCF"
	  },
	  "Algorithm": {
		"prefix": "algo",
		"body": [
			"#include <iostream>",
			"#include <algorithm>",
			"#include <vector>",
			"#include <string>",
			"#include <queue>",
			"#include <deque>",
			"#include <utility>",
			"#define all(x) (x).begin(), (x).end()",
			"#define rep(i, a, b) for (int i = (a); i < (b); ++i)",
			"using namespace std;",
			"",
			"int main()",
			"{",
			"\tios_base::sync_with_stdio(false);",
			"\tcin.tie(NULL); cout.tie(NULL);",
			"",
			"\treturn 0;",
			"}"
		],
		"description": "BAD Automatic Solver Setter"
	  }
}
